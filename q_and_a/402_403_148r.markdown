### 


```ruby
  def link_to_add_fields(name, f, association)
    new_object = f.object.send(association).klass.new
    id = new_object.object_id
    fields = f.fields_for(association, new_object, child_index: id) do |builder|
      render(association.to_s.singularize + "_fields", f: builder)
    end
    link_to(name, '#', class: "add_fields", data: {id: id, fields: fields.gsub("\n", "")})
  end
```

```ruby
#调用的时候
#f是啥呢？
form_for(@product_type) do |f|
  link_to_add_fields "Add Field", f, :fields
end
```
这是个啥？谁说两句

```ruby
# app/views/product_types/_field_fields.html.erb
<fieldset>
  <%= f.select :field_type, %w{text_field check_box shirt_sizes} %>
  <%= f.text_field :name, placeholder: 'field_name' %>
  <%= f.check_box :required %><%= f.label :required %>
  <%= f.hidden_field :_destroy %>
  <%= link_to '[remove]', '#', class: 'remove_fields' %>
</fieldset>
```

```ruby
  <%= f.fields_for :fields do |builder| %>
    <%= render 'field_fields', f: builder %>
  <% end %>

  <%= link_to_add_fields "Add Field", f, :fields %>
```
整体功能上，add field就是，用js再添加一个和上面`fields_for` 一样的partial

找一下f的定义，是`@product_type`

```ruby
fields = f.fields_for(association, new_object, child_index: id) do |builder|
      render(association.to_s.singularize + "_fields", f: builder)
    end
```

实际上

```ruby

fields = f.fields_for(:fields, ProductType.new, child_index: id) do |builder|
      render("field_fields", f: builder)
    end
```
而且，这个`:fields`也有讲究，是`@product_type.fields`的缩写

[详见](http://api.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#method-i-fields_for)

理解有不准确，和不对的，欢迎指正哈
